///////////////////////////////////////////////////////////////////////////
/// Checker Framework pluggable type-checking and Error Prone example
///

plugins {
    id 'java'
    id 'net.ltgt.errorprone' version '0.8.1'
    // Checker Framework pluggable type-checking
    id 'org.checkerframework' version '0.3.28' apply false
}

apply plugin: 'org.checkerframework'

dependencies {
    errorprone 'com.google.errorprone:error_prone_core:2.3.3'
    errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'

    compileOnly 'org.checkerframework:checker-qual:2.11.0'
    testCompileOnly 'org.checkerframework:checker-qual:2.11.0'
    checkerFramework 'org.checkerframework:checker:2.11.0'
    checkerFrameworkAnnotatedJDK 'org.checkerframework:jdk8:2.11.0'
}

repositories {
    mavenCentral()
}

checkerFramework {
    checkers = [
        'org.checkerframework.checker.nullness.NullnessChecker',
    ]
}

compileJava {
    // A checker will only run if Error Prone does not issue any warnings.  So
    // convert the expected error to a warning to test that both Error Prone
    // and the Nullness Checker run.
    options.errorprone.warn('CollectionIncompatibleType')
}
